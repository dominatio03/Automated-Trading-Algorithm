source ('simple_arithmetic.R'.echo = TRUE)
vol1 = df1[,3]
Rscript main.R solution.R input/book_1.csv input/empty.txt
Rscript main.R solution.R input/book_1.csv input/empty.txt
main.R solution.R input/book_1.csv input/empty.txt
Rscript main.R template.R input/book_1.csv input/empty.txt
$ Rscript main.R template.R input/book_1.csv input/empty.txt
Rscript main.R solution.R input/book_1.csv input/empty.txt
solution.R input/book_1.csv input/empty.txt
Rscript main.R template.R input/book_1.csv input/empty.txt
Rscript main.R template.R input/book_1.csv input/empty.txt
available <- c(10,4,7,10,12)
desired <- c(12,5,2,6,14)
traded <- sum(mapply(function(x,y) min(x,y), available, desired))
cumsum(1:10)
cumprod(1:10)
cummin(c(3:1, 2:0, 4:2))
cummax(c(3:1, 2:0, 4:2))
a =c(3,0,TRUE)
b=c(4,0,FALSE)
library(ggplot2)
install.packages("rlang")
install.packages("rlang")
R.version()
R --version
R.version.string
brew upgrade --cask r
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
install.packages("plotly")
install.packages("plotly")
installed.packages("plotly")
library(plotly)
library(ggplot2)
library(readr)
# Read the data (assuming your data is in a CSV file)
df <- read_csv("Final Risk Optimization.csv") # Replace with the path to your CSV file
df <- df[df$score >= 0, ]
fig <- plot_ly(data = df, x = ~sma, y = ~takeprofit, z = ~entry, type = 'scatter3d', mode = 'markers')
#fig <- plot_ly(z = ~df$score, type = "surface")
fig <- fig %>% add_trace(data = df, x = ~sma, y = ~takeprofit, z = ~entry,
type = 'scatter3d', mode = 'marker',
marker = list(size = 10, color = ~score, colorscale = 'Viridis'))
# Show the plot
fig
setwd("C:/Users/vipke/OneDrive/Desktop/Project/backtester_v5.8")
source("R_3D_V1.R")
installed.packages("readr")
install.packages("readr")
